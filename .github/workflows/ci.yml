name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  GO_VERSION: "1.22"
  NODE_VERSION: "18"

jobs:
  test:
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev  libwebkit2gtk-4.0-dev
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci --prefer-offline

      - name: Install Go dependencies
        run: go mod download

      - name: Verify Go modules
        run: go mod verify

      - name: Run Go tests with coverage
        run: |
          go test -v -race -coverprofile=coverage.out -covermode=atomic ./...
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Run frontend linter
        run: |
          cd frontend
          npm run lint

      - name: Run frontend type check
        run: |
          cd frontend
          npm run type-check || true

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Test Wails build
        run: wails build --clean --platform linux/amd64

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ci-build-linux
          path: build/bin/
          retention-days: 7
