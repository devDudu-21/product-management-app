name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., v1.0.0)"
        required: true
        default: "v1.0.0"
      prerelease:
        description: "Is this a pre-release?"
        required: false
        default: false
        type: boolean

env:
  GO_VERSION: "1.22"
  NODE_VERSION: "18"

jobs:
  release:
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            os: linux
            arch: amd64
            filename: wails-app-linux-amd64
          - runner: windows-latest
            os: windows
            arch: amd64
            filename: wails-app-windows-amd64.exe
          - runner: macos-latest
            os: darwin
            arch: amd64
            filename: wails-app-darwin-amd64
          - runner: macos-latest
            os: darwin
            arch: arm64
            filename: wails-app-darwin-arm64

    runs-on: ${{ matrix.platform.runner }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci --prefer-offline

      - name: Install Go dependencies
        run: go mod download

      - name: Verify dependencies
        run: |
          go mod verify
          cd frontend && npm audit --audit-level high

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build Linux
        if: matrix.platform.os == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev
          wails build --clean --platform linux/amd64 -o ${{ matrix.platform.filename }}

      - name: Build Windows
        if: matrix.platform.os == 'windows'
        run: |
          wails build --clean --platform windows/amd64 -o ${{ matrix.platform.filename }}

      - name: Build macOS Intel
        if: matrix.platform.os == 'darwin' && matrix.platform.arch == 'amd64'
        run: |
          wails build --clean --platform darwin/amd64 -o ${{ matrix.platform.filename }}

      - name: Build macOS ARM
        if: matrix.platform.os == 'darwin' && matrix.platform.arch == 'arm64'
        run: |
          wails build --clean --platform darwin/arm64 -o ${{ matrix.platform.filename }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.filename }}
          path: |
            build/bin/${{ matrix.platform.filename }}*

  create-release:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease || false }}
          generate_release_notes: true
          body: |
            ## 🚀 Product Management System ${{ steps.get_version.outputs.VERSION }}

            ### 📥 Downloads
            Choose the appropriate version for your operating system:

            - **Windows**: `wails-app-windows-amd64.exe`
            - **macOS (Intel)**: `wails-app-darwin-amd64`
            - **macOS (Apple Silicon)**: `wails-app-darwin-arm64`
            - **Linux**: `wails-app-linux-amd64`

            ### 🔧 Installation
            1. Download the appropriate file for your OS
            2. Make it executable (Unix systems): `chmod +x wails-app-*`
            3. Run the application

            ### 📝 Release Notes
            Auto-generated release notes will appear below.
          files: |
            artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
