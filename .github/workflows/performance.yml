name: Performance Testing

on:
  schedule:
    - cron: "0 4 * * 2" # Every Tuesday at 4 AM
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "core/**"
      - "app.go"
      - "main.go"

env:
  GO_VERSION: "1.23"
  NODE_VERSION: "18"

jobs:
  benchmark:
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev  libwebkit2gtk-4.0-dev

      - name: Install dependencies
        run: |
          cd frontend
          npm ci --prefer-offline
          cd ..
          go mod download

      - name: Run Go benchmarks
        run: |
          go test -bench=. -benchmem -run=^$ ./... | tee benchmark.txt

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build application
        run: |
          time wails build --clean --platform linux/amd64

      - name: Check binary size
        run: |
          ls -lh build/bin/
          echo "Binary size: $(du -h build/bin/product-management-app | cut -f1)"

      - name: Frontend bundle analysis
        run: |
          cd frontend
          npm run build
          echo "Frontend dist size: $(du -sh dist/ | cut -f1)"

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: |
            benchmark.txt
            build/bin/
          retention-days: 30

  memory-test:
    runs-on: ubuntu-22.04
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run memory leak tests
        run: |
          go test -v -run=TestMemory ./... || echo "No memory tests found"

      - name: Profile memory usage
        run: |
          go test -memprofile=mem.prof -run=^$ -bench=. ./... || echo "No benchmarks found"
          if [ -f mem.prof ]; then
            go tool pprof -text mem.prof | head -20
          fi
