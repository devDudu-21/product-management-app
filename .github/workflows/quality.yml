name: Code Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 8 * * 1" # Every Monday at 8 AM

env:
  GO_VERSION: "1.22"
  NODE_VERSION: "18"

jobs:
  quality:
    runs-on: ubuntu-22.04
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for SonarCloud

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci --prefer-offline
          cd ..
          go mod download

      - name: Run Go linting
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m

      - name: Run Go tests with coverage
        run: |
          go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Run frontend linting
        run: |
          cd frontend
          npm run lint

      - name: Run frontend tests (if available)
        run: |
          cd frontend
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            npm test -- --coverage --watchAll=false || true
          fi

      - name: Check Go formatting
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Go code is not properly formatted:"
            gofmt -s -l .
            exit 1
          fi

      - name: Check for Go vulnerabilities
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

      - name: Check frontend formatting
        run: |
          cd frontend
          if [ -f "package.json" ] && grep -q '"format:check"' package.json; then
            npm run format:check || true
          fi

  dependency-review:
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
